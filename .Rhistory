hi
"hi"
T
F
if(T)
"hi"
FALSE
if(x<45)
"hi"
x<-45
if(x<=45)
"Hi"
x<-67
y<-87
if(y<x)
"Hi"
else
T
T==F
q()
library(caret)
library(AppliedPredictiveModeling)
data(twoClassData)
str(predictors)
str(classes)
trainingRows<-createDataPartition(classes, p=0.8, list=FALSE)
head(trainingRows)
trainPredictors<-predicotrs[trainingRows,]
trainPredictors<-predictors[trainingRows,]
trainClasses<-classes[trainingRows]
testPredictors<-predictors[-trainingRows,]
str(trainPredictors)
splitCv<-createFolds(trainClasses,k=10, returnTrain=TRUE)
?createFolds
str(splitCv)
fold1<-splitCv[[1]]
cvPredictors<-trainPredictors[fold1,]
cvClasses<-trainClasses[fold1]
cvPredictors<-trainPredictors[fold1,]
str(cvPredictors)
knnFit<-knn3(x=trainPredictors, y=trainClasses, k=5)
knnFit
?predict
testPredictions<-predict(knnFit, newdata = testPredictors, type="class")
head(testPredictions)
str(testPredictions)
library(AppliedPredictiveModeling)
library(caret)
data("GermanCredit")
View(GermanCredit)
View(GermanCredit)
svmFit<-train(class~ ., data=GermanCreditTrain, method="svmRadial")
Cv.split<-createMultiFolds(Class, k=10, times=5 returnTrain=TRUE)
cvSplit<-createMultiFolds(Class, k=10, times=5, returnTrain=TRUE)
cvSplit<-createMultiFolds(Class, k=10, times=5)
View(GermanCredit)
cvSplit<-createMultiFolds(GermanCredit$Class, k=10, times=5)
fold1<-cSplit[[1]]
fold1<-cvSplit[[1]]
GermanCreditTrain<-GermanCredit[fold1,]
svmFit<-train(class~ ., data=GermanCreditTrain, method="svmRadial")
GermanCreditTrain<-as.matrix(GermanCreditTrain)
svmFit<-train(class~ ., data=GermanCreditTrain, method="svmRadial")
library(rJAVA)
library(xlsx)
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre7')
library(rJava)
library(rJava)
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created<-h5createFile("example.h5")
created<-h5createGroup("example.h5","foo")
created<-h5createGroup("example.h5","boo")
created<-h5createGroup("example.h5","foo/fooboo")
h5ls("example.h5")
b<-seq(0.1,2.0,0.1)
b<-array(seq(0.1,2.0,0.1),dim=c(5,2,2))
attr(b,"scale")<-"liter"
h5write(b,"example.h5","foo/fooboo/b")
h5ls("example.h5")
A<-matrix(1:10,5,2)
h5write(A,"example.h5","foo/A")
b<-array(seq(0.1,2.0,0.1),dim=c(5,2,2))
attr(b,"scale")<-"liter"
h5write(b,"example.h5","foo/fooboo/b")
h5ls("example.h5")
df<-data.frame(1L:5L,seq(0,1,0.2),c("ab","cde","fgh","a","b"),stringsAsFactors = FALSE)
h5write(df,"example.h5","df")
df<-data.frame(1L:5L,seq(0,0.8,0.2),c("ab","cde","fgh","a","b"),stringsAsFactors = FALSE)
h5write(df,"example.h5","df")
h5close()
h5close("example.h5")
H5close("example.h5")
h5ls("example.h5")
h5write(c(12,13,14),"example.h5","foo/A",index=list(1:3,1))
h5ls("example.h5")
readA<-h5read("example.h5","foo/A")
readA
con<-url("http://scholar.google.com/citation?user=HI-I6C0AAAAJ&hl=en")
htmlcode<-readLines(con)
con<-url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlcode<-readLines(con)
close(con)
htmlcode
library(XML)
html<-htmlTreeParse(con,useInternalNodes = TRUE)
url<-"http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html<-htmlTreeParse(url,useInternalNodes = TRUE)
xpathSApply(html,"//title",xmlValue)
rootnode<-xmlRoot(html)
rootnode[[1]]
rootnode[[1][1][1]]
rootnode[[1]][[1]][[1]]
rootnode[[1]][[1]]
library(httr)
html2<-GET(url)
content2<-content(html2,as="text")
xpathSApply(parsedHTML,"//title",xmlValue)
parsedHTML<-htmlParse(content2,asText = TRUE)
xpathSApply(parsedHTML,"//title",xmlValue)
names(html2)
myapp <- oauth_app("github",
key = "8980c2045e6e28e5b289",
secret = "5e42f1e747c8bdac812dcb59109991ef661d3b38")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
install.packages("knitr")
install.packages("rmarkdown")
setwd(~/Fookey/Training/Training)
download.file(https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip, destfile="cloudfront")
fileurl<-https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip
download.file(fileurl, destfile="cloudfront.csv")
fileurl<-https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip
fileurl<-"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileurl, destfile="cloudfront.csv")
data<-read.csv("cloudfront.csv")
View(data)
View(data)
setwd("C:/Users/Fookey/Training/Training")
getwd()
fileurl<-"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileurl, destfile="cloudfront.csv")
fileurl<-"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileurl, destfile="cloudfront.csv.bz2")
fileurl<-"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileurl, destfile="cloudfront.csv.bz2")
data<-read.csv("cloudfront.csv.bz2")
View(data)
View(data)
unzip("cloudfront.csv.bz2")
data<-read.csv("cloudfront.csv.bz2")
list.files()
fileurl<-"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileurl, destfile="cloudfront.csv.bz2")
unzip("cloudfront.csv.bz2")
list.files()
data<-read.csv("activity.csv")
View(data)
View(data)
View(data)
View(data)
str(data)
mean(steps)
mean(data$steps)
data<-read.csv("activity.csv")
mean(data$steps)
mean(data$steps, na.rm=TRUE)
View(data)
View(data)
library(ggplot2)
ggplot(date, aes(date, steps))
+ geom_bar(stat = "identity", colour = "steelblue", fill = "steelblue", width = 0.7)
+facet_grid(. ~ month, scales = "free")
+ labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
ggplot(noNA, aes(date, steps)) + geom_bar(stat = "identity", colour = "steelblue", fill = "steelblue", width = 0.7) + facet_grid(. ~ month, scales = "free") + labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
library(ggplot2)
ggplot(date, aes(date, steps))
+ geom_bar(stat = "identity", colour = "steelblue", fill = "steelblue", width = 0.7)
+facet_grid(. ~ month, scales = "free")
+ labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
library(ggplot2)
ggplot(date, aes(date, steps))
+ geom_bar(stat = "identity", fill = "steelblue", width = 0.7)
+facet_grid(. ~ month)
+ labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
ggplot(date, aes(date, steps))
+ geom_bar(stat = "identity", fill = "steelblue", width = 0.7)
+facet_grid(. ~ month)
+ ggtitle("Histogram of Total Number of Steps Taken Each Day")
+xlabs("Date")+ylab("Total number of steps")
library(ggplot2)
ggplot(date, aes(date, steps))
+ geom_bar(stat = "identity", fill = "steelblue", width = 0.7)
+facet_grid(. ~ month)
+ ggtitle("Histogram of Total Number of Steps Taken Each Day")
+xlabs("Date")+ylab("Total number of steps")
ggplot(date, aes(date, steps))
+ geom_bar(stat = "identity", fill = "steelblue", width = 0.7)
+facet_grid(. ~ month)
+ ggtitle("Histogram of Total Number of Steps Taken Each Day")
+xlab("Date")+ylab("Total number of steps")
ggplot(date, aes(date, steps))
+ geom_bar(stat = "identity", fill = "steelblue", width = 0.7)
+facet_wrap(~ month) + ggtitle("Histogram of Total Number of Steps Taken Each Day")+xlab("Date")+ylab("Total number of steps")
ggplot(date, aes(date, steps)) + geom_bar(stat = "identity", fill = "steelblue", width = 0.7)+facet_wrap(~ month) + ggtitle("Histogram of Total Number of Steps Taken Each Day")+xlab("Date")+ylab("Total number of steps")
